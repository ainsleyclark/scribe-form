{"version":3,"file":"/js/scribe.js","mappings":"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","sources":["webpack://scribe-form/webpack/runtime/chunk loaded","webpack://scribe-form/./src/js/common/log.ts","webpack://scribe-form/./src/js/validation/util.ts","webpack://scribe-form/./src/js/validation/tests.ts","webpack://scribe-form/./src/js/scribe.ts","webpack://scribe-form/webpack/bootstrap","webpack://scribe-form/webpack/runtime/hasOwnProperty shorthand","webpack://scribe-form/webpack/runtime/jsonp chunk loading","webpack://scribe-form/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Logger utility class for logging out messages to the\n * console.\n */\nexport class Log {\n    static prefix = \"Scribe -\";\n    /**\n     * Log a console error.\n     * @param message\n     * @param data\n     */\n    static error(message, ...data) {\n        console.error(this.prefix, message, data);\n    }\n    /**\n     * Log a console warning,\n     * @param message\n     * @param data\n     */\n    static warn(message, ...data) {\n        console.warn(this.prefix, message, data);\n    }\n    /**\n     * Log a console message.\n     * @param message\n     * @param data\n     */\n    static info(message, ...data) {\n        console.log(this.prefix, message, data);\n    }\n}\n","/**\n *\n * @returns string\n */\nexport function tmpl() {\n    return this.replace(/\\${([^{}]*)}/g, (a, b) => arguments[b]);\n}\n/**\n *\n * @param el\n */\nexport function groupedElemCount(el) {\n    const form = el.closest('form');\n    if (!form) {\n        return 0;\n    }\n    return form\n        .querySelectorAll('input[name=\"' + el.getAttribute('name') + '\"]:checked')\n        .length;\n}\n","import { groupedElemCount } from \"./util\";\nimport { Log } from \"../common/log\";\n/**\n * Validation is responsive for formatting initial validation methods\n * and adding any custom user validation functions.\n */\nclass Validation {\n    /**\n     * The key, value pairs of validators.\n     */\n    tests;\n    /**\n     * Creates a new Validation type and initialises built in\n     * validation methods.\n     */\n    constructor() {\n        this.tests = {};\n        tests.forEach(test => this.add(test.name, test.validate, test.priority));\n    }\n    /**\n     * Adds a validator to the tests object.\n     * If a validator already exists, the function will return.\n     * @param name\n     * @param validate\n     * @param priority\n     * @param message\n     */\n    add(name, validate, priority, message) {\n        if (Object.prototype.hasOwnProperty.call(this.tests, name)) {\n            Log.error(\"Validator already exists:\", name);\n            return;\n        }\n        if (!priority) {\n            priority = 1;\n        }\n        this.tests[name] = { name, priority, validate, message };\n        this.sort();\n    }\n    /**\n     * Sorts the tests' priority in ascending order.\n     */\n    sort() {\n        this.tests = Object\n            .entries(this.tests)\n            .sort((a, b) => b[1].priority - a[1].priority)\n            .reduce((_sortedObj, [k, v]) => ({\n            ..._sortedObj,\n            [k]: v\n        }), {});\n    }\n}\n/**\n * The array of built-in validators.\n */\nconst tests = [\n    {\n        name: 'required',\n        priority: 99,\n        validate: (el) => {\n            const value = el.value;\n            if (el.type === 'radio' || el.type === 'checkbox') {\n                return groupedElemCount(el) === 0;\n            }\n            return value !== undefined && value !== '';\n        }\n    },\n    {\n        name: 'email',\n        priority: 1,\n        validate: (el) => {\n            return !!el.value.match(\n            // eslint-disable-next-line no-useless-escape\n            /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        }\n    },\n    {\n        name: 'number',\n        priority: 1,\n        validate: (el) => {\n            return !el.value || !isNaN(parseFloat(el.value));\n        }\n    },\n    {\n        name: 'url',\n        priority: 1,\n        validate: (el) => {\n            return !!el.value.match(RegExp('[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_\\\\+.~#?&//=]*)'));\n        }\n    },\n    {\n        name: 'minlength',\n        priority: 1,\n        validate: (el, length) => {\n            return !el.value || el.value.length >= parseInt(length);\n        }\n    },\n    {\n        name: 'maxlength',\n        priority: 1,\n        validate: (el, length) => {\n            return !el.value || el.value.length <= parseInt(length);\n        }\n    },\n    {\n        name: 'min',\n        priority: 1,\n        validate: (el, limit) => {\n            if (el.type === 'checkbox') {\n                return groupedElemCount(el) >= parseInt(limit);\n            }\n            return parseFloat(el.value) >= parseFloat(limit);\n        }\n    },\n    {\n        name: 'max',\n        priority: 1,\n        validate: (el, limit) => {\n            if (el.type === 'checkbox') {\n                return groupedElemCount(el) <= parseInt(limit);\n            }\n            return parseFloat(el.value) <= parseFloat(limit);\n        }\n    },\n    {\n        name: 'pattern',\n        priority: 1,\n        validate: (el, pattern) => {\n            const reg = new RegExp('^/(.*?)/([gimy]*)$');\n            const m = pattern.match(reg);\n            return !el.value || (new RegExp(m[1], m[2])).test(el.value);\n        }\n    },\n    {\n        name: 'equals',\n        priority: 1,\n        validate: (el, selector) => {\n            const other = document.querySelector(selector);\n            if (!other) {\n                Log.error(\"No query selector found for equals:\", selector);\n                return false;\n            }\n            return other.value == el.value;\n        }\n    }\n];\nexport const validators = new Validation();\n","/**\n * scribe.js\n *\n * Scribe class for forms.\n *\n * @author Ainsley Clark\n * @author URL:   https://ainsley.dev\n * @author Email: hello@ainsley.dev\n */\nimport { Log } from \"./common/log\";\nimport Classes from \"./common/classes\";\nimport { Validation } from \"./validation/validation\";\nconst VERSION = \"1.0.0\";\n/**\n * TODO\n */\nvar Direction;\n(function (Direction) {\n    Direction[\"Next\"] = \"next\";\n    Direction[\"Previous\"] = \"prev\";\n    Direction[\"First\"] = \"first\";\n    Direction[\"Last\"] = \"last\";\n})(Direction || (Direction = {}));\nexport class Scribe {\n    /**\n     * Default configuration for scribe.\n     */\n    config = {\n        form: \".scribe-form\",\n        speed: 600,\n        size: \"100vh\",\n        controls: true,\n        horizontal: false,\n        okButton: \".scribe-ok\",\n        prevButton: \".scribe-prev\",\n        nextButton: \".scribe-next\",\n    };\n    /**\n     * The main HTML Form element to use.\n     * @type {HTMLFormElement}\n     */\n    form;\n    /**\n     * TODO: Add jsDoc\n     * @type {Validation}\n     */\n    validation;\n    /**\n     * TODO: Add jsDoc\n     * @type {HTMLElement[]}\n     */\n    list;\n    /**\n     * TODO: Add jsDoc\n     * @type {number}\n     * @private\n     */\n    currentSlide = 0;\n    /**\n     * TODO: Add jsDoc\n     * @type {number}\n     * @private\n     */\n    burst = 0;\n    /**\n     * TODO: Add jsDoc\n     * @type {number}\n     * @private\n     */\n    animatingTime = 600;\n    /**\n     * Creates a new Scribe instance based of the configuration passed.\n     * If no config is passed, scribe defaults will be used.\n     * @param config\n     */\n    constructor(config) {\n        if (config) {\n            this.config = { ...this.config, ...config };\n        }\n        // @ts-ignore\n        this.setForm(this.config.form);\n        this.list = this.form.querySelectorAll(\".scribe-question\");\n        this.form.addEventListener(\"submit\", e => {\n            e.preventDefault();\n        });\n        this.validation = new Validation(this.form, {\n            live: false,\n            dataAttribute: 'scribe',\n            showAll: false,\n            classes: {\n                classTo: 'scribe-question',\n            }\n        });\n        this.listener();\n        this.attachControls();\n        //x this.attachOk();\n        this.addClasses();\n        //   this.focusElement(this.getInput(this.list[0]))\n    }\n    /**\n     * Obtains the current Scribe Version number.\n     * @returns string\n     */\n    version() {\n        return VERSION;\n    }\n    /**\n     * TODO: Add jsDoc\n     * @param {number | \"next\" | \"prev\" | \"first\" | \"last\"} target\n     */\n    goTo(target) {\n        if (typeof target === 'number') {\n            this.animate(target);\n            return;\n        }\n        switch (target) {\n            case Direction.Next:\n                this.animate(this.currentSlide + 1);\n                break;\n            case Direction.Previous:\n                this.animate(this.currentSlide - 1);\n                break;\n            case Direction.First:\n                this.animate(0);\n                break;\n            case Direction.Last:\n                this.animate(this.list.length);\n                break;\n            default:\n                Log.error(\"Target should be 'next', 'prev', 'first', 'last' or index\");\n        }\n    }\n    /**\n     * TODO: Add jsDoc\n     * @private\n     */\n    listener() {\n        document.addEventListener('keypress', e => {\n            const isEnter = e.key === 'Enter';\n            if (e.shiftKey && isEnter && e.target instanceof HTMLTextAreaElement) {\n                e.preventDefault();\n                e.target.value += \"\\n\";\n                return;\n            }\n            if (isEnter) {\n                e.preventDefault();\n                this.goTo('next');\n            }\n        });\n    }\n    /**\n     * Determines if the current slide is the first in the form.\n     * @returns {boolean}\n     */\n    isFirstSlide() {\n        return this.currentSlide === 0;\n    }\n    /**\n     * Determines if the current slide is the last in the form.\n     * @returns bool\n     */\n    isLastSlide() {\n        return this.list.length - 1 === this.currentSlide;\n    }\n    /**\n     * TODO: jsDoc\n     * @returns {ScribeInfo}\n     */\n    getInfo() {\n        return {\n            index: this.currentSlide,\n            items: this.list.length,\n            progress: this.progress(),\n        };\n    }\n    // on(event,callback) {\n    //     if(!_triggers[event])\n    //         _triggers[event] = [];\n    //     _triggers[event].push( callback );\n    // }\n    /**\n     *\n     * @returns {number}\n     * @private\n     */\n    progress() {\n        return (this.currentSlide / this.list.length) * 100;\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n    validate() {\n        return true;\n    }\n    /**\n     *\n     * @private\n     */\n    addClasses() {\n        this.list.forEach((el, index) => {\n            if (index === 0) {\n                el.classList.add('scribe-active');\n                el.ariaHidden = 'false';\n            }\n            else {\n                el.ariaHidden = 'true';\n                el.style.transform = `translate3d(0,${this.config.size},0)`;\n            }\n        });\n        this.form.classList.add('scribe-form-loaded');\n    }\n    /**\n     *\n     * @param {number} to\n     * @private\n     */\n    animate(to) {\n        const isForwards = to > this.currentSlide;\n        if (isForwards && this.isLastSlide()) {\n            return;\n        }\n        if (!isForwards && this.isFirstSlide()) {\n            return;\n        }\n        // TODO Sanity check array\n        const next = this.list[to], curr = this.list[this.currentSlide];\n        const currentInput = this.getInput(curr);\n        if (!currentInput) {\n            return;\n        }\n        const valid = this.validation.validateField(currentInput);\n        if (!valid && isForwards) {\n            return;\n        }\n        this.burst++;\n        let currTransform = `translate3d(0,${this.config.size},0)`;\n        if (isForwards) {\n            currTransform = `translate3d(0,-${this.config.size},0)`;\n        }\n        curr.style.transform = currTransform;\n        curr.style.opacity = '0';\n        curr.ariaHidden = 'true';\n        Classes.remove(curr, 'scribe-active');\n        next.style.transform = 'translate3d(0,0,0)';\n        next.style.opacity = '1';\n        next.ariaHidden = 'false';\n        Classes.add(next, 'scribe-active');\n        if (isForwards) {\n            this.currentSlide++;\n        }\n        else {\n            this.currentSlide--;\n        }\n        this.focusElement(this.getInput(next));\n    }\n    /**\n     *\n     * @private\n     */\n    attachControls() {\n        if (!this.config.controls) {\n            return;\n        }\n        const next = document.querySelector(\".scribe-next\");\n        if (next) {\n            next.addEventListener(\"click\", e => {\n                e.preventDefault();\n                this.goTo(Direction.Next);\n            });\n        }\n        const prev = document.querySelector(\".scribe-previous\");\n        if (prev) {\n            prev.addEventListener(\"click\", e => {\n                e.preventDefault();\n                this.goTo(Direction.Previous);\n            });\n        }\n    }\n    /**\n     *\n     * @private\n     */\n    // private attachOk(): void {\n    //     if (!this.config.okButton) {\n    //         return;\n    //     }\n    //     this.form.querySelectorAll(this.config.okButton).forEach(btn => {\n    //         btn.addEventListener(\"click\", () => this.goTo('next'));\n    //     })\n    // }\n    /**\n     * Obtains the input element from a list item.\n     * @param el\n     * @private\n     */\n    getInput = (el) => el.querySelector(\"input, textarea, select\");\n    /**\n     * Focuses the HTMLElement, in order for the user to type when\n     * a slide has transitioned.\n     * @param el\n     * @private\n     */\n    focusElement(el) {\n        if (!el) {\n            return;\n        }\n        setTimeout(() => {\n            this.burst--;\n            if (this.burst === 0) {\n                el.focus();\n            }\n        }, this.animatingTime - 100);\n    }\n    /**\n     * Sets the form\n     * @param form\n     * @private\n     */\n    setForm(form) {\n        if (typeof form === \"string\") {\n            form = document.querySelector(form);\n        }\n        if (!form) {\n            Log.error(`${form} is not a valid HTMLFormElement`);\n        }\n        this.form = form;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t375: 0,\n\t528: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkscribe_form\"] = self[\"webpackChunkscribe_form\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [528], () => (__webpack_require__(673)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [528], () => (__webpack_require__(923)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Log","message","data","console","error","this","prefix","warn","log","groupedElemCount","el","form","closest","querySelectorAll","getAttribute","length","Validation","tests","forEach","test","add","name","validate","priority","Object","prototype","hasOwnProperty","call","sort","entries","a","b","reduce","_sortedObj","k","v","value","type","undefined","match","isNaN","parseFloat","RegExp","parseInt","limit","pattern","reg","m","selector","other","document","querySelector","Direction","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","o","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}